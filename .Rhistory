as_tibble(mtcars)
rownames(mtcars)
vectornulo<-c(1,2,10, NA)
class(vectornulo)
mean(vectornulo)
mean(vectornulo, na.rm=TRUE)
tib_ejemplo <- tibble(
nombre = c("Claudio","Javiera","Elias", NA,"Camila"),
valor = c(10, NA, 7, NA, 15)
)
str(tib_ejemplo)
tib_ejemplo <- tibble(
nombre = c("Claudio","Javiera","Elias", NA,"Camila"),
valor = c(10, NA, 7, NA, 15)
)
str(tib_ejemplo)
tib_ejemplo
na.omit(tib_ejemplo)
is.na(tib_ejemplo$nombre)
tib_ejemplo[is.na(tib_ejemplo$nombre)==FALSE,]
tib_ejemplo$nombre[tib_ejemplo$nombre=='Claudio'] <- NA
tib_ejemplo
summary(tib_ejemplo)
tib_ejemplo$nombre=='Claudio'
tib_ejemplo <- tibble(
nombre = c("Claudio","Javiera","Elias", NA,"Camila"),
valor = c(10, NA, 7, NA, 15)
)
tib_ejemplo$nombre=='Claudio'
vec <- LETTERS[1:5]
mat <- matrix(1:9,ncol=3)
vect
vec
mat
list<-list( 'letras'=vec, 'matriz'=mat)
list
list$letras
list$matriz
list[[1]]
list[[2]]
list[[2]]
list[[2]][, 3]
list[[2]][3, ]
list[[3]]<-3
list
names(list)
names(list)[3]<-'numero'
list
c(1,2,3)<2
c(1,2,3)>2
c(1,2,3)==2
c("a","B","c")
letters
c("a","B","c") %in% letters
dir.create('Clase 3')
1:10
1:10-1
0:10
c(0, 1:10)
mtcars
class(mtcars)
mtcars[,1]
mtcars[1,]
mtcars[1]
mtcars$mpg
mtcars[[1]]
mtcars[1] #subdataframe que contiene la columna 1
mtcars[[1]] #esto te extrae el primer vector (primera columna
rownames(mtcars)
mtcars.arreglada<-data.frame(nombre=rownames(mtcars), mtcars)
mtcars.arreglada
mtcars.arreglada$nombre
head(mtcars.arreglada)
rownames(mtcars.arreglada)<-NULL
mtcars.arreglada
mtcars.arreglada$nombre
mtcars.arreglada$nombre
mtcars.arreglada$nombre %in% c('Mazda RX4 Wag')
mtcars.arreglada[mtcars.arreglada$nombre %in% c('Mazda RX4 Wag'),]
mtcars.arreglada$nombre %in% c('Mazda RX4 Wag','Volvo 142E')
mtcars.arreglada[mtcars.arreglada$nombre %in% c('Mazda RX4 Wag','Volvo 142E'),]
grepl('toyota', mtcars.arreglada$nombre)
tolower(mtcars.arreglada$nombre)
tolower(mtcars.arreglada$nombre)
grepl('toyota', tolower(mtcars.arreglada$nombre))
mtcars.arreglada[grepl('toyota', tolower(mtcars.arreglada$nombre)),]
mtcars.arreglada[1,]
mtcars.arreglada[,2]
vector_na<-c(10, 20, NA, 50, -1, -10)
vector_na
mean(vector_na, na.rm=TRUE)
mean(vector_na)
vector_na<-c(10, 20, NA, 50, -1, -10)
vector_na2<-c(4, 10, 20, 60, NA, 20)
data<-data.frame(vector_na, vector_na2)
data
mean(data$vector_na2, na.rm=TRUE)
summary(data)
vector_nombres<-c('Natalie', 'Pablo', 'Giselle', 'MAite')
vector_letras<-c('A', 'b', 'C', 'F')
data.frame(vector_nombres, vector_letras)
data_texto<-data.frame(vector_nombres, vector_letras)
tolower(data_texto)
data_texto<-data.frame(tolower(vector_nombres), tolower(vector_letras))
data_texto
1:10
1:10  >5
1:10  >=5
1:10 ==5
library(readxl)
empresas <- read_excel("C:/Users/Naty/Downloads/202010_PUB_TRAM5_ACT.xlsx",
sheet = "Datos", na = "*", skip = 4)
View(empresas)
library(readxl)
empresas <- read_excel("C:/Users/Naty/Downloads/202010_PUB_TRAM5_ACT.xlsx",
sheet = "Datos", na = "*", skip = 4)
View(empresas)
empresas
names(empresas)
library(janitor)
library(janitor)
clean_names(empresas)
empresas<-clean_names(empresas)
View(empresas)
install.packages(janitor) #instalar el paquete janitor
library(readxl)
empresas <- read_excel("C:/Users/Naty/Downloads/202010_PUB_TRAM5_ACT.xlsx",
sheet = "Datos", na = "*", skip = 4)
names(empresas)
empresas$`Número de trabajadores dependientes de género masculino informados` #nombres feos :c
nombres_originales<-names(empresas)
empresas<-clean_names(empresas)
empresas$numero_de_trabajadores_dependientes_informados
nombres_originales
library(openxlsx)
?openxlsx::read.xlsx
robos<-read_xlsx("C:/Users/Naty/Downloads/robos.xlsx", fillMergedCells=TRUE)
robos<-read.xlsx("C:/Users/Naty/Downloads/robos.xlsx", fillMergedCells=TRUE)
robos
robos<-openxlsx::read.xlsx("C:/Users/Naty/Downloads/robos.xlsx", fillMergedCells=TRUE)
robos
?openxlsx::read.xlsx
robos<-openxlsx::read.xlsx("C:/Users/Naty/Downloads/robos.xlsx", fillMergedCells=TRUE,
na.strings = 'Sin Información')
robos
robos
robos
robos<-openxlsx::read.xlsx("C:/Users/Naty/Downloads/robos.xlsx",
fillMergedCells=TRUE                          )
robos
robos<-openxlsx::read.xlsx("C:/Users/Naty/Downloads/robos.xlsx",
fillMergedCells=TRUE, na.strings = 'Sin Información')
robos
summary(robos)
robos<-openxlsx::read.xlsx("C:/Users/Naty/Downloads/robos.xlsx",
fillMergedCells=TRUE)
robos
summary(robos)
robos<-openxlsx::read.xlsx("C:/Users/Naty/Downloads/robos.xlsx",
fillMergedCells=TRUE, na.strings = 'Sin Información')
robos
robos<-openxlsx::read.xlsx("C:/Users/Naty/Downloads/robos.xlsx",
fillMergedCells=TRUE, na.strings = 'Sin Información')
robos<-openxlsx::read.xlsx("C:/Users/Naty/Downloads/robos.xlsx",
fillMergedCells=TRUE, na.strings = 'Sin Información')
summary(robos)
2.2
1.4
1,2
library(rio)
library(rio)
data_list<-import_list("C:/Users/Naty/Downloads/ocupacion.xlsx")
data_list
data_list$Antofagasta
data_list$Aysén
names(data_list)
clean_names(data_list)
make_clean_names(data_list)
data.frame('Tarapacá', data_list$Tarapacá)
library(tidyverse)
clean_names(empresas)
empresas %>%
clean_names()
empresas %>%
clean_names()
empresas %>%
clean_names() %>%
filter(ano_comercial==2019)
empresas%>%
clean_names()%>%
filter(ano_comercial==2019)%>%
summarise(mean(ano_comercial))
empresas%>%
clean_names()%>%
filter(ano_comercial==2019)%>%
summarise(mean(ano_comercial), min(ano_comercial), max(ano_comercial), median(ano_comercial))
empresas%>%
clean_names()%>%
filter(ano_comercial==2019)%>%
summarise(mean(ano_comercial),
min(ano_comercial),
max(ano_comercial),
median(ano_comercial))
empresas%>%
clean_names()%>%
filter(ano_comercial==2019)%>%
summarize(mean(ano_comercial),
min(ano_comercial),
max(ano_comercial),
median(ano_comercial))
empresas%>%
clean_name()%>%
select(actividad_economica)
empresas%>%
clean_names()%>%
select(actividad_economica)
empresas%>%
clean_names()%>%
select(actividad_economica)%>%
slice(1)
empresas%>%
clean_names()%>%
select(actividad_economica)%>%
slice(1:10)
empresas %>%
clean_names()%>%
filter(tramo_segun_ventas_5_tramos=='Micro')
empresas %>%
clean_names()%>%
filter(tramo_segun_ventas_5_tramos=='Micro')%>%
summarise(mean(numero_de_empresas))
empresas %>%
clean_names()%>%
group_by(tramo_segun_ventas_5_tramos)%>%
summarise(mean(numero_de_empresas), mean(numero_de_trabajadores_dependientes_informados))
empresas %>%
clean_names()%>%
group_by(tramo_segun_ventas_5_tramos)%>%
summarise(mean(numero_de_empresas), mean(numero_de_trabajadores_dependientes_informados))%>%
arrange(tramo_segun_ventas_5_tramos)
empresas %>%
clean_names()%>%
group_by(tramo_segun_ventas_5_tramos)%>%
summarise(mean(numero_de_empresas), mean(numero_de_trabajadores_dependientes_informados))%>%
arrange(desc(tramo_segun_ventas_5_tramos))
View(empresas)
empresas %>%
clean_names()%>%
mutate(venta_clp=ventas_anuales_en_uf*32227)
empresas %>%
clean_names()%>%
mutate(venta_clp=ventas_anuales_en_uf*32227)%>%
select(venta_clp)
?options
options(digits=10)
empresas %>%
clean_names()%>%
mutate(venta_clp=ventas_anuales_en_uf*32227)%>%
select(venta_clp)
options(digits=15)
empresas %>%
clean_names()%>%
mutate(venta_clp=ventas_anuales_en_uf*32227)%>%
select(venta_clp)
options(scipen=999)
empresas %>%
clean_names()%>%
mutate(venta_clp=ventas_anuales_en_uf*32227)%>%
select(venta_clp)
empresas2<-empresas %>%
clean_names()%>%
mutate(venta_clp=ventas_anuales_en_uf*32227)%>%
select(venta_clp)
empresas2
empresas3<-empresas %>%
clean_names()%>%
mutate(venta_clp=ventas_anuales_en_uf*32227)
empresas3
names(empresas3)
library(readxl)
viviendasRM <- read_excel("C:/Users/Naty/Downloads/viviendasRM.xlsx")
View(viviendasRM)
viviendasRM
viviendasRM %>% clean_names()
viviendasRM<-viviendasRM %>% clean_names()
names(viviendasRM)
viviendasRM %>% slice(4)
viviendasRM %>% slice(8) %>% select(n_banos)
viviendasRM %>% slice(14) %>% select(n_estacionamientos)
viviendasRM$n_estacionamientos[viviendasRM$n_estacionamientos=='No']<-0
viviendasRM %>% slice(14) %>% select(n_estacionamientos)
viviendasRM$n_estacionamientos<-as.numeric(viviendasRM$n_estacionamientos)
viviendasRM %>% slice(14) %>% select(n_estacionamientos)
viviendasRM %>% slice(5:10) %>% select(total_superficie_m2, valor_uf)
viviendasRM%>%filter(total_superficie_m2==100)%>%select(total_superficie_m2, corredor, valor_uf)
viviendasRM%>%filter(total_superficie_m2==100)%>%select(total_superficie_m2, corredor, valor_uf)%>%
summarise(mean(valor_uf), min(valor_uf), median(valor_uf), max(valor_uf))
ggplot(data=viviendasRM, aes(x=n_habitaciones, y=valor_uf))+
geom_point()
ggplot(data=viviendasRM, aes(x=n_habitaciones, y=valor_uf))+
geom_point()+
xlab('Número de habitaciones')
ggplot(data=viviendasRM, aes(x=n_habitaciones, y=valor_uf))+
geom_point()+
xlab('Número de habitaciones')+
ylab('Valor en UF (caras)')
max(viviendasRM$n_habitaciones)
max(viviendasRM$n_habitaciones, na.rm=TRUE)
ggplot(data=viviendasRM, aes(x=n_habitaciones, y=valor_uf))+
geom_point()+
xlab('Número de habitaciones')+
ylab('Valor en UF (caras)')+
scale_x_continuous(breaks=1:19)
ggplot(data=viviendasRM, aes(x=n_habitaciones, y=valor_uf))+
geom_point()+
xlab('Número de habitaciones')+
ylab('Valor en UF (caras)')+
scale_x_continuous(breaks=1:max(viviendasRM$n_habitaciones))
ggplot(data=viviendasRM, aes(x=n_habitaciones, y=valor_uf))+
geom_point()
ggplot(data=viviendasRM, aes(x=n_habitaciones, y=valor_uf))+
geom_point()+
xlab('Número de habitaciones')
ggplot(data=viviendasRM, aes(x=n_habitaciones, y=valor_uf))+
geom_point()+
xlab('Número de habitaciones')+
ylab('Valor en UF (caras)')+
scale_x_continuous(breaks=1:max(viviendasRM$n_habitaciones, na.rm=TRUE))
ggplot(data=viviendasRM, aes(x=n_habitaciones, y=valor_uf))+
geom_point()+
xlab('Número de habitaciones')+
ylab('Valor en UF (caras)')+
scale_x_continuous(breaks=1:max(viviendasRM$n_habitaciones, na.rm=TRUE))+
theme_bw()
ggplot(data=viviendasRM, aes(x=n_habitaciones, y=valor_uf))+
geom_point()+
xlab('Número de habitaciones')+
ylab('Valor en UF (caras)')+
scale_x_continuous(breaks=1:max(viviendasRM$n_habitaciones, na.rm=TRUE))+
theme_minimal()
ggplot(data=viviendasRM, aes(x=valor_uf))+
geom_histogram()
ggplot(data=viviendasRM, aes(x=valor_uf))+
geom_histogram()+
xlab('Valor UF')+
ylab('Frecuencia absoluta')
ggplot(data=viviendasRM, aes(x=valor_uf))+
geom_histogram(bins=50)+
xlab('Valor UF')+
ylab('Frecuencia absoluta')
ggplot(data=viviendasRM, aes(x=valor_uf))+
geom_histogram(bins=50)+
xlab('Valor UF')+
ylab('Frecuencia absoluta')+
theme_linedraw()
ggplot(data=viviendasRM, aes(x=valor_uf))+
geom_histogram()+
xlab('Valor UF')+
ylab('Frecuencia absoluta')+
theme_linedraw()
ggplot(data=viviendasRM, aes(x=valor_uf))+
geom_histogram(50)+
xlab('Valor UF')+
ylab('Frecuencia absoluta')+
theme_linedraw()
ggplot(data=viviendasRM, aes(x=valor_uf))+
geom_histogram(bins=50)+
xlab('Valor UF')+
ylab('Frecuencia absoluta')+
theme_linedraw()
ggplot(data=viviendasRM, aes(x=valor_uf))+
geom_histogram(bins=30)+
xlab('Valor UF')+
ylab('Frecuencia absoluta')+
theme_linedraw()
ggplot(data=viviendasRM, aes(x=valor_uf))+
geom_histogram(bins=100)+
xlab('Valor UF')+
ylab('Frecuencia absoluta')+
theme_linedraw()
ggplot(data=viviendasRM, aes(x=valor_uf))+
geom_histogram(bins=10)+
xlab('Valor UF')+
ylab('Frecuencia absoluta')+
theme_linedraw()
ggplot(data=viviendasRM, aes(x=valor_uf))+
geom_histogram(bins=5)+
xlab('Valor UF')+
ylab('Frecuencia absoluta')+
theme_linedraw()
ggplot(data=viviendasRM, aes(x=valor_uf))+
geom_histogram(bins=100)+
xlab('Valor UF')+
ylab('Frecuencia absoluta')+
theme_linedraw()
ggplot(data=viviendasRM, aes(x=valor_uf))+
geom_histogram(bins=5)+
xlab('Valor UF')+
ylab('Frecuencia absoluta')+
theme_linedraw()
data_list<-import_list("C:/Users/Naty/Downloads/ocupacion.xlsx")
data_list$Antofagasta
data_list$Aysén
clean_names(data_list) #no funciona T_T todo se derrumbó :'(
data.frame('Tarapacá', data_list$Tarapacá) #se podria hacer un for y recorrer todos los elemtnso de la lista :)
install.packages('tidyverse')
library(tidyverse)
funcion3(funcion2(clean_names(empresas)))
empresas %>%
clean_names() %>%
filter(ano_comercial==2019)
empresas_nuevo%>%
clean_names()%>%
filter(ano_comercial==2019)%>%
summarize(mean(ano_comercial),
min(ano_comercial),
max(ano_comercial),
median(ano_comercial))
empresas%>%
clean_names()%>%
select(actividad_economica)%>%
slice(1:10)
empresas %>%
clean_names()%>%
filter(tramo_segun_ventas_5_tramos=='Micro')%>%
summarise(mean(numero_de_empresas))
empresas %>%
clean_names()%>%
group_by(tramo_segun_ventas_5_tramos)%>%
summarise(mean(numero_de_empresas), mean(numero_de_trabajadores_dependientes_informados))%>%
arrange(desc(tramo_segun_ventas_5_tramos))
empresas %>%
clean_names()%>%
mutate(venta_clp=ventas_anuales_en_uf*32227)%>%
select(venta_clp)
options(scipen=100) ########## BUSCAR COMO CAMBIAR NOTACION CIENTIFICA tarea para mi (resuelto)
empresas %>%
clean_names()%>%
mutate(venta_clp=ventas_anuales_en_uf*32227)%>%
select(venta_clp)
options(scipen=100000) ########## BUSCAR COMO CAMBIAR NOTACION CIENTIFICA tarea para mi (resuelto)
empresas %>%
clean_names()%>%
mutate(venta_clp=ventas_anuales_en_uf*32227)%>%
select(venta_clp)
empresas %>%
clean_names()%>%
mutate(venta_clp=ventas_anuales_en_uf*32227)%>%
select(venta_clp)
options(scipen=10000000000000) ########## BUSCAR COMO CAMBIAR NOTACION CIENTIFICA tarea para mi (resuelto)
empresas %>%
clean_names()%>%
mutate(venta_clp=ventas_anuales_en_uf*32227)%>%
select(venta_clp)
e*11
e11
e^11
e
options(scipen=100000000000000000000000000000000000000) ########## BUSCAR COMO CAMBIAR NOTACION CIENTIFICA tarea para mi (resuelto)
empresas %>%
clean_names()%>%
mutate(venta_clp=ventas_anuales_en_uf*32227)%>%
select(venta_clp)
warnings()
3.56^{20}
options(scipen=1000000) ########## BUSCAR COMO CAMBIAR NOTACION CIENTIFICA tarea para mi (resuelto)
3.56^{20}
options(scipen=0) ########## BUSCAR COMO CAMBIAR NOTACION CIENTIFICA tarea para mi (resuelto)
3.56^{20}
empresas %>%
clean_names()%>%
mutate(venta_clp=format(ventas_anuales_en_uf*32227, cientific=F))%>%
select(venta_clp)
empresas %>%
clean_names()%>%
mutate(venta_clp=as.numeric(format(ventas_anuales_en_uf*32227, cientific=F)))%>%
select(venta_clp)
lapply(iris,function(x) toupper(x))
lapply(iris,function(x) tolower(x))
vector_nombres<-c('Natalie', 'Pablo', 'Giselle', 'MAite')
vector_letras<-c('A', 'b', 'C', 'F')
data_texto<-data.frame(vector_nombres, vector_letras)
lapply(data_texto,function(x) tolower(x))
apply(data_texto,function(x) tolower(x), 2)
?apply
apply(data_texto,2, function(x) tolower(x))
apply(data_texto,2, tolower(x))
apply(data_texto,2, function(x) tolower(x))
apply(data_texto,2, tolower())
apply(data_texto,2, tolower)
empresas %>%
clean_names()%>%
mutate(venta_clp=format(ventas_anuales_en_uf*32227, cientific=F))%>%
select(venta_clp)
empresas %>%
clean_names()%>%
mutate(venta_clp=ventas_anuales_en_uf*32227)%>%
select(venta_clp)
empresas %>%
clean_names()%>%
mutate(venta_clp=format(ventas_anuales_en_uf*32227, cientific=F))%>%
select(venta_clp)
empresas %>%
clean_names()%>%
mutate(venta_clp=ventas_anuales_en_uf*32227/10000)%>%
select(venta_clp)
empresas %>%
clean_names()%>%
mutate(venta_clp=ventas_anuales_en_uf*32227/1000)%>%
select(venta_clp)
?options
?options
