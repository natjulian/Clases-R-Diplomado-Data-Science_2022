viviendasRM%>%
group_by(comuna)%>%
summarise(prom_sup=mean(total_superficie_m2, na.rm=TRUE),
prom_nbanos=mean(n_banos, na.rm=TRUE),
max_n_estacion=max(n_estacionamientos, na.rm=TRUE))%>%
arrange(desc(prom_sup))
viviendasRM%>%
group_by(comuna)%>%
summarise(prom_sup=mean(total_superficie_m2, na.rm=TRUE),
prom_nbanos=mean(n_banos, na.rm=TRUE),
max_n_estacion=max(n_estacionamientos, na.rm=TRUE))%>%
arrange(desc(prom_sup))%>%
slice(1:5)
viviendasRM%>%
mutate(cat_banio=case_when(n_banos==0 ~'Sin banio',
n_banos>0 && n_banos<3 ~'Entre 1 y 3 banios',
TRUE ~ 'Otro caso'))
viviendasRM%>%
mutate(cat_banio=case_when(n_banos==0 ~'Sin banio',
n_banos>0 & n_banos<3 ~'Entre 1 y 3 banios',
TRUE ~ 'Otro caso')) %>%
select(comuna, sitioweb, n_banos, cat_banio)
viviendasRM%>%
mutate(cat_banio=case_when(n_banos==0 ~'Sin banio',
n_banos>0 & n_banos<3 ~'Entre 1 y 3 banios',
TRUE ~ 'Otro caso')) %>%
group_by(comuna, cat_banio)%>%
count()%>%
arrange(comuna, n)
viviendasRM<- viviendasRM %>%
rename(vendedor=quien_vende)
viviendasRM%>%
arrange(desc(n_banos))%>%
slice(1:10)
viviendasRM%>%
group_by(n_banos)%>%
count()
viviendasRM%>%
summarise(prom_uf=mean(valor_uf), prom_clp=mean(valor_clp))
viviendasRM%>%
mutate(cat_banio=case_when(n_habitaciones<2 ~'pocas_hab',
n_habitaciones>=3 & n_habitaciones<=5 ~'varias_hab',
TRUE ~ 'muchas_hab'))
viviendasRM%>%
mutate(cat_habit=case_when(n_habitaciones<2 ~'pocas_hab',
n_habitaciones>=3 & n_habitaciones<=5 ~'varias_hab',
TRUE ~ 'muchas_hab'))%>%
select(n_habitaciones, cat_habit)
viviendasRM<- viviendasRM%>%
mutate(sup_sin_cons=total_superficie_m2-superficie_construida_m2)
viviendasRM%>%
select(total_superficie_m2, superficie_construida_m2)%>%
summary()
unique(viviendasRM$superficie_construida_m2)
library(stringr)
str_detect(tolower(viviendasRM$superficie_construida_m2), 'ha')
sum(str_detect(tolower(viviendasRM$superficie_construida_m2), 'ha'), na.rm=TRUE) #solo hay 1 caso
str_remove(tolower(viviendasRM$superficie_construida_m2), 'ha')
as.numeric(str_remove(tolower(viviendasRM$superficie_construida_m2), 'ha'))
str_remove_all(tolower(viviendasRM$superficie_construida_m2), '[:alpha:]')
str_remove(tolower(viviendasRM$superficie_construida_m2), '[:alpha:]')
?str_remove
viviendasRM<-viviendasRM%>%
mutate(superficie_construida_m2=as.numeric(str_remove_all(tolower(superficie_construida_m2),  '[:alpha:]')))
viviendasRM<-viviendasRM%>%
mutate(sup_sin_cons=total_superficie_m2-superficie_construida_m2)
viviendasRM$sup_sin_cons
names(viviendasRM)
str_replace(names(viviendasRM), 'n', 'num')
str_replace(names(viviendasRM), '^[n_]', 'num') #taraaaaaaaa :)
names(viviendasRM)<- str_replace(names(viviendasRM), '^[n_]', 'num')
head(viviendasRM) #tamos ready :)
str_replace(names(viviendasRM), '[a]$', 'num')
str_replace(names(viviendasRM), '[a]$', 'num')
str_replace(names(viviendasRM), 'vivienda$', 'num')
?inner_join
library(readxl)
viviendasRM <- read_excel("Clase 4/Bases de datos/viviendasRM.xlsx")
View(viviendasRM)
library(readxl)
library(tidyverse)
viviendasRM <- read_excel("Clase 4/Bases de datos/viviendasRM.xlsx")
View(viviendasRM)
head(viviendasRM)
summary(viviendasRM)
names(viviendasRM)
library(janitor)
viviendasRM<- viviendasRM %>% clean_names()
names(viviendasRM)
summary(viviendasRM)
viviendasRM%>%
select(n_estacionamientos)
unique(viviendasRM$n_estacionamientos)
viviendasRM$n_estacionamientos
ifelse(n_estacionamientos=='No',0, n_estacionamientos)
ifelse(viviendasRM$n_estacionamientos=='No',0, viviendasRM$n_estacionamientos)
viviendasRM<-viviendasRM%>%
mutate(n_estacionamientos=ifelse(tolower(n_estacionamientos)=='no',0, n_estacionamientos))
viviendasRM%>%
select(n_estacionamientos)
viviendasRM<-viviendasRM%>%
mutate(n_estacionamientos=as.numeric(n_estacionamientos))
viviendasRM%>%
select(n_estacionamientos)
viviendasRM<-viviendasRM%>%
mutate(n_estacionamientos=as.numeric(ifelse(tolower(n_estacionamientos)=='no',0, n_estacionamientos)))
viviendasRM%>%
select(n_estacionamientos)
viviendasRM%>%
select(n_estacionamientos)%>%
summarise(mean(n_estacionamientos), min(n_estacionamientos))
viviendasRM%>%
select(n_estacionamientos)%>%
summarise(mean(n_estacionamientos, na.rm=TRUE), min(n_estacionamientos, na.rm = TRUE))
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar()
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_histogram()
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar()
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
ggtitle('Cantidad  de casas en venta en RM según Número de Estacionamiento')
1:10
seq(1,10)
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
ggtitle('Cantidad  de casas en venta en RM según Número de Estacionamiento')+
scale_x_continuous(breaks=1:10)
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
ggtitle('Cantidad  de casas en venta en RM según Número de Estacionamiento')+
scale_x_continuous(breaks=seq(min(viviendasRM$n_estacionamientos),  max(viviendasRM$n_estacionamientos), by=1))
min(viviendasRM$n_estacionamientos)
max(viviendasRM$n_estacionamientos)
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
ggtitle('Cantidad  de casas en venta en RM según Número de Estacionamiento')+
scale_x_continuous(breaks=seq(min(viviendasRM$n_estacionamientos, na.rm=TRUE),
max(viviendasRM$n_estacionamientos, na.rm=TRUE), by=1))
viviendasRM%>%group_by(n_estacionamientos)
viviendasRM%>%group_by(n_estacionamientos)%>%count()
viviendasRM%>%group_by(n_estacionamientos)%>%count()%>%summarise(max(n))
tablafrq<-viviendasRM%>%group_by(n_estacionamientos)%>%count()
maxconteo<-max(tablafrq$n)
maxconteo
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
ggtitle('Cantidad  de casas en venta en RM según Número de Estacionamiento')+
scale_x_continuous(breaks=seq(min(viviendasRM$n_estacionamientos, na.rm=TRUE),
max(viviendasRM$n_estacionamientos, na.rm=TRUE), by=1))+
scale_y_continuous(breaks=seq(0, maxconteo, by=100))
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
ggtitle('Cantidad  de casas en venta en RM según Número de Estacionamiento')+
scale_x_continuous(breaks=seq(min(viviendasRM$n_estacionamientos, na.rm=TRUE),
max(viviendasRM$n_estacionamientos, na.rm=TRUE), by=1))+
scale_y_continuous(breaks=seq(0, maxconteo, by=100))+
theme_minimal()
viviendasRM%>%group_by(n_estacionamientos)%>%count()
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar(fill='orange')+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
ggtitle('Cantidad  de casas en venta en RM según Número de Estacionamiento')+
scale_x_continuous(breaks=seq(min(viviendasRM$n_estacionamientos, na.rm=TRUE),
max(viviendasRM$n_estacionamientos, na.rm=TRUE), by=1))+
scale_y_continuous(breaks=seq(0, maxconteo, by=100))+
theme_minimal()
?labs
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar(fill='orange')+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
ggtitle('Cantidad  de casas en venta en RM según Número de Estacionamiento')+
labs(subtitle = 'holi')
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar(fill='orange')+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
ggtitle('Cantidad  de casas en venta en RM según Número de Estacionamiento')+
labs(subtitle = 'Fuente: Google')
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar(fill='orange')+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
ggtitle('Cantidad  de casas en venta en RM según Número de Estacionamiento')+
labs(subtitle = 'Fuente: Google')
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar(fill='orange')+
theme_classic()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
ggtitle('Cantidad  de casas en venta en RM según Número de Estacionamiento')+
labs(subtitle = 'Fuente: Google')
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar(fill='orange')+
theme_classic()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
ggtitle('Cantidad  de casas en venta en RM según Número de Estacionamiento')+
labs(subtitle = 'Fuente: Google')
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar(fill='orange')+
theme_classic()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
ggtitle('Cantidad  de casas en venta en RM <br> según Número de Estacionamiento')+
labs(subtitle = 'Fuente: Google')
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar(fill='orange')+
theme_classic()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
ggtitle('Cantidad  de casas en venta en RM según <\br>Número de Estacionamiento')+ ## añadir un salto
labs(subtitle = 'Fuente: Google')
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar(fill='orange')+
theme_classic()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
ggtitle('Cantidad  de casas en venta en RM según <\n> Número de Estacionamiento')+ ## añadir un salto
labs(subtitle = 'Fuente: Google')
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar(fill='orange')+
theme_classic()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
ggtitle('Cantidad  de casas en venta en RM según \n Número de Estacionamiento')+ ## añadir un salto
labs(subtitle = 'Fuente: Google')
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar(fill='orange')+
theme_classic()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
scale_x_continuous(breaks=seq(min(viviendasRM$n_estacionamientos, na.rm=TRUE),
max(viviendasRM$n_estacionamientos, na.rm=TRUE), by=1))+
scale_y_continuous(breaks=seq(0, maxconteo, by=100))+
ggtitle('Cantidad  de casas en venta en RM según \n Número de Estacionamiento')+ ## añadir un salto
labs(subtitle = 'Fuente: Google')
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar(fill='orange')+
theme_classic()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
scale_x_continuous(breaks=seq(min(viviendasRM$n_estacionamientos, na.rm=TRUE),
max(viviendasRM$n_estacionamientos, na.rm=TRUE), by=1))+
scale_y_continuous(breaks=seq(0, maxconteo, by=100))+
ggtitle('Cantidad  de casas en venta en RM según \nNúmero de Estacionamiento')+ ## añadir un salto
labs(subtitle = 'Fuente: Google')
names(viviendasRM)
viviendasRM<-viviendasRM%>%
rename(sitioweb=link)
names(viviendasRM)
unique(viviendasRM$comuna)
viviendasRM%>%
filter(comuna == 'San Joaquín'| comuna=='Maipú')
ggplot(data=viviendasRM%>%
filter(comuna == 'San Joaquín'| comuna=='Maipú'), aes(x=n_estacionamientos))+
geom_bar(fill='orange')+
theme_classic()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
scale_x_continuous(breaks=seq(min(viviendasRM$n_estacionamientos, na.rm=TRUE),
max(viviendasRM$n_estacionamientos, na.rm=TRUE), by=1))+
scale_y_continuous(breaks=seq(0, maxconteo, by=100))+
ggtitle('Cantidad  de casas en venta en RM según \nNúmero de Estacionamiento')+ ## añadir un salto
labs(subtitle = 'Fuente: Google')
tablafrq2<-viviendasRM%>% filter(comuna == 'San Joaquín'| comuna=='Maipú') %>%
group_by(n_estacionamientos)%>%count()
maxconteo2<-max(tablafrq2$n)
ggplot(data=viviendasRM%>%
filter(comuna == 'San Joaquín'| comuna=='Maipú'), aes(x=n_estacionamientos))+
geom_bar(fill='orange')+
theme_classic()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
scale_x_continuous(breaks=seq(min(viviendasRM$n_estacionamientos, na.rm=TRUE),
max(viviendasRM$n_estacionamientos, na.rm=TRUE), by=1))+
scale_y_continuous(breaks=seq(0, maxconteo2, by=100))+
ggtitle('Cantidad  de casas en venta en RM según \nNúmero de Estacionamiento')+ ## añadir un salto
labs(subtitle = 'Fuente: Google')
maxconteo2
ggplot(data=viviendasRM%>%
filter(comuna == 'San Joaquín'| comuna=='Maipú'), aes(x=n_estacionamientos))+
geom_bar(fill='orange')+
theme_classic()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
scale_x_continuous(breaks=seq(min(viviendasRM$n_estacionamientos, na.rm=TRUE),
max(viviendasRM$n_estacionamientos, na.rm=TRUE), by=1))+
scale_y_continuous(breaks=seq(0, maxconteo2, by=2))+
ggtitle('Cantidad  de casas en venta en RM según \nNúmero de Estacionamiento')+ ## añadir un salto
labs(subtitle = 'Fuente: Google')
ggplot(data=viviendasRM%>%
filter(comuna == 'San Joaquín'| comuna=='Maipú'), aes(x=n_estacionamientos))+
geom_bar(fill='orange')+
theme_classic()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
scale_x_continuous(breaks=seq(min(viviendasRM$n_estacionamientos, na.rm=TRUE),
max(viviendasRM$n_estacionamientos, na.rm=TRUE), by=1))+
scale_y_continuous(breaks=seq(0, maxconteo2, by=2))+
ggtitle('Cantidad  de casas en venta en RM según \nNúmero de Estacionamiento comunas San Joaquín y Maipú')+ ## añadir un salto
labs(subtitle = 'Fuente: Google')
ggplot(data=viviendasRM%>%
filter(comuna == 'San Joaquín'| comuna=='Maipú'), aes(x=n_estacionamientos))+
geom_bar(fill='green')+
theme_classic()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
scale_x_continuous(breaks=seq(min(viviendasRM$n_estacionamientos, na.rm=TRUE),
max(viviendasRM$n_estacionamientos, na.rm=TRUE), by=1))+
scale_y_continuous(breaks=seq(0, maxconteo2, by=2))+
ggtitle('Cantidad  de casas en venta en RM según \nNúmero de Estacionamiento comunas San Joaquín y Maipú')+ ## añadir un salto
labs(subtitle = 'Fuente: Google')
ggplot(data=viviendasRM%>%
filter(comuna == 'San Joaquín'| comuna=='Maipú'), aes(x=n_estacionamientos))+
geom_bar(fill='darkblue')+
theme_classic()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
scale_x_continuous(breaks=seq(min(viviendasRM$n_estacionamientos, na.rm=TRUE),
max(viviendasRM$n_estacionamientos, na.rm=TRUE), by=1))+
scale_y_continuous(breaks=seq(0, maxconteo2, by=2))+
ggtitle('Cantidad  de casas en venta en RM según \nNúmero de Estacionamiento comunas San Joaquín y Maipú')+ ## añadir un salto
labs(subtitle = 'Fuente: Google')
viviendasRM%>% filter(comuna == 'San Joaquín'| comuna=='Maipú') %>%
group_by(n_estacionamientos)%>%count()
ggplot(data=viviendasRM, aes(x=n_estacionamientos))+
geom_bar(fill='orange')+
theme_classic()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
scale_x_continuous(breaks=seq(min(viviendasRM$n_estacionamientos, na.rm=TRUE),
max(viviendasRM$n_estacionamientos, na.rm=TRUE), by=1))+
scale_y_continuous(breaks=seq(0, maxconteo, by=100))+
ggtitle('Cantidad  de casas en venta en RM según \nNúmero de Estacionamiento')+ ## añadir un salto
labs(subtitle = 'Fuente: Google')
ggplot(data=viviendasRM%>%
filter(comuna == 'San Joaquín'| comuna=='Maipú'), aes(x=n_estacionamientos))+
geom_bar(fill='darkblue')+
theme_classic()+
ylab('Cantidad de Casas en venta en la Región Metropolitana')+
xlab('Número de estacionamientos')+
scale_x_continuous(breaks=seq(min(viviendasRM$n_estacionamientos, na.rm=TRUE),
max(viviendasRM$n_estacionamientos, na.rm=TRUE), by=1))+
scale_y_continuous(breaks=seq(0, maxconteo2, by=2))+
ggtitle('Cantidad  de casas en venta en RM según \nNúmero de Estacionamiento comunas San Joaquín y Maipú')+ ## añadir un salto
labs(subtitle = 'Fuente: Google')
tablafrq2
viviendasRM%>% filter(comuna == 'San Joaquín'| comuna=='Maipú') %>%
group_by(n_estacionamientos)%>% summarise(n=n())
viviendasRM%>% filter(comuna == 'San Joaquín'| comuna=='Maipú') %>%
group_by(n_estacionamientos)%>% summarise(n=n()) %>%
arrange(n)
viviendasRM%>%
group_by(comuna)%>%
summarise(prom_sup=mean(total_superficie_m2, na.rm=TRUE),
max_estacionamiento=max(n_estacionamientos, na.rm = TRUE))
viviendasRM%>%
group_by(comuna)%>%
summarise(prom_sup=mean(total_superficie_m2, na.rm=TRUE),
max_estacionamiento=max(n_estacionamientos, na.rm = TRUE))%>%
arrange(max_nestacionamiento)%>%
slice(1:5)
viviendasRM%>%
group_by(comuna)%>%
summarise(prom_sup=mean(total_superficie_m2, na.rm=TRUE),
max_estacionamiento=max(n_estacionamientos, na.rm = TRUE))%>%
arrange(max_estacionamiento)%>%
slice(1:5)
viviendasRM%>%
group_by(comuna)%>%
summarise(prom_sup=mean(total_superficie_m2, na.rm=TRUE),
max_estacionamiento=max(n_estacionamientos, na.rm = TRUE))%>%
arrange(desc(max_estacionamiento))%>%
slice(1:5)
viviendasRM%>% filter(comuna == 'San Joaquín'| comuna=='Maipú') %>%
group_by(n_estacionamientos)%>% summarise(n=n()) %>%
arrange(n)
viviendasRM%>%
group_by(comuna)%>%
summarise(prom_sup=mean(total_superficie_m2, na.rm=TRUE),
max_estacionamiento=max(n_estacionamientos, na.rm = TRUE))%>%
arrange(max_estacionamiento)%>%
slice(1:5)
viviendasRM%>%
mutate(cat_banios=case_when(n_banos==0 ~ 'Sin banio',
n_banos>0 & n_banos<3 ~ 'Entre 1 y 2 banios',
n_banos>=3 & n_banos<7 ~ 'Entre 3 y 6 banios',
TRUE ~ 'Otro caso'))
viviendasRM%>%
mutate(cat_banios=case_when(n_banos==0 ~ 'Sin banio',
n_banos>0 & n_banos<3 ~ 'Entre 1 y 2 banios',
n_banos>=3 & n_banos<7 ~ 'Entre 3 y 6 banios',
TRUE ~ 'Otro caso'))%>%
select(cat_banios)
viviendasRM%>%
mutate(cat_banios=case_when(n_banos==0 ~ 'Sin banio',
n_banos>0 & n_banos<3 ~ 'Entre 1 y 2 banios',
n_banos>=3 & n_banos<7 ~ 'Entre 3 y 6 banios',
TRUE ~ 'Otro caso'))%>%
select(n_banos, cat_banios)
viviendasRM<- viviendasRM%>%
mutate(cat_banios=case_when(n_banos==0 ~ 'Sin banio',
n_banos>0 & n_banos<3 ~ 'Entre 1 y 2 banios',
n_banos>=3 & n_banos<7 ~ 'Entre 3 y 6 banios',
TRUE ~ 'Otro caso'))
viviendasRM%>%
group_by(comuna, cat_banios)%>%
count()
View(viviendasRM%>%
group_by(comuna, cat_banios)%>%
count())
names(viviendasRM)
viviendasRM%>%
mutate(sup_sin_con=total_superficie_m2-superficie_construida_m2)
viviendasRM%>%
select(total_superficie_m2, superficie_construida_m2)
unique(viviendasRM$superficie_construida_m2)
str_detect(viviendasRM$superficie_construida_m2, 'ha')
sum(str_detect(viviendasRM$superficie_construida_m2, 'ha'))
sum(str_detect(viviendasRM$superficie_construida_m2, 'ha'), na.rm=TRUE)
str_remove_all(viviendasRM$superficie_construida_m2, '[:alpha:]')
str_remove_all(viviendasRM$comuna, '[:alpha:]')
str_remove_all(viviendasRM$superficie_construida_m2, '[:alpha:]')
viviendasRM<-viviendasRM%>%
mutate(superficie_construida_m2=as.numeric(str_remove_all(viviendasRM$superficie_construida_m2, '[:alpha:]')))
summary(viviendasRM)
viviendasRM<-viviendasRM%>%
mutate(sup_sin_con=total_superficie_m2-superficie_construida_m2)
viviendasRM%>%
select(sup_sin_con)
str_detect(viviendasRM$superficie_construida_m2, '[:alpha:]')
str_detect(viviendasRM$comuna, '[:alpha:]')
viviendasRM$comuna[str_detect(viviendasRM$comuna, '[:alpha:]')]
ejemplos<-c(123, 'holi', '12 q tal', 90)
str_detect(ejemplos, '[:alpha:]')
ejemplos[str_detect(ejemplos, '[:alpha:]')]
unique(ejemplos[str_detect(ejemplos, '[:alpha:]')])
names(viviendasRM)
str_replace_all(names(viviendasRM), 'n', 'num')
str_replace_all(names(viviendasRM), '^[n]', 'num')
str_replace_all(names(viviendasRM), '[a]$', 'holi')
str_replace_all(names(viviendasRM), 'a$', 'holi')
as.Date("1982-01-13")
library(lubridate)
library(lubridate)
fecha<-c("2022-05-10", "2020-10-4", "2019-03-03")
fecha<-as.Date(fecha)
year(fecha)
month(fecha)
day(fecha)
wday(fecha)
parse_date_time(fechas, "ymd")
fechas <- c("95-04-09", "87-12-03", "89-09-09")
parse_date_time(fechas, "ymd")
parse_date_time(fechas, "y m d")
parse_date_time(fechas, "%y%m%d")
fechas <- c("1995-04-09", "09091989", "03-04-1987")
fechas <- parse_date_time(fechas, c("dmy", "ymd"))
fechas
var<-c(1,10,15)
data<-data.frame(fechas, var)
data
ggplot(data, aes(x=fechas, y=var))+
geom_line()
ggplot(data, aes(x=fechas, y=var))+
geom_line()+
geom_point()
ggplot(data, aes(x=fechas, y=var))+
geom_line()+
geom_point()+
theme_minimal()
load('Clase 4/Bases de datos/nombres1.RData')
nombres1
load('Clase 4/Bases de datos/nombres1.RData')
load('Clase 4/Bases de datos/nombres2.RData')
nombres2
(nombresv1<-nombres1%>%slice(3:10))
(nombresv2<-nombres1%>%slice(1:7))
(nombresv1<-nombres1%>%slice(3:10))
(nombresv2<-nombres2%>%slice(1:7))
dim(nombresv1)
dim(nombresv2)
inner_join(nombresv1, nombrev2, by='nombre')
inner_join(nombresv1, nombresv2, by='nombre')
inner_join(nombresv1, nombresv2, by='nombre')
left_join(nombresv1, nombresv2, by='nombre')
right_join(nombresv1, nombresv2, by='nombre')
full_join(nombresv1, nombresv2, by='nombre')
?full_join
